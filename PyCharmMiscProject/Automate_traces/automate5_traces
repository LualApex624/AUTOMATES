=== Lecture de l'automate depuis le fichier automate/automate5.txt ===
Alphabet: ['a', 'b']
États: [0, 1, 2, 3, 4]
États initiaux: [1, 3]
États terminaux: [2, 4]
Transitions:
1 --a--> {2}
1 --b--> {0}
3 --a--> {0}
3 --b--> {4}
0 --a--> {0}
0 --b--> {0}

=== Vérification des propriétés de l'automate ===
Cet automate n'a pas un unique état initial, il n'est pas déterministe
Déterministe : False
Cet automate n'a pas 1 unique état initial, il n'est pas standard
Standard : False
L'automate est incomplet car les états suivants sont sans transitions : [(2, 'a'), (2, 'b'), (4, 'a'), (4, 'b')]
Complet : False

=== Standardisation de l'automate ===
Cet automate n'a pas 1 unique état initial, il n'est pas standard
Cet automate n'a pas 1 unique état initial, il n'est pas standard
Création de l'automate standard : 
Alphabet: ['a', 'b']
États: [0, 1, 2, 3, 4, 5]
États initiaux: [5]
États terminaux: [2, 4]
Transitions:
1 --a--> {2}
1 --b--> {0}
3 --a--> {0}
3 --b--> {4}
0 --a--> {0}
0 --b--> {0}
5 --a--> {0, 2}
5 --b--> {0, 4}

=== Déterminisation et complétion de l'automate ===

Début de la déterminisation et de la complétion...
L'automate ne contient pas de transitions epsilon. Utilisation de determiniser_automate.
Cet automate n'a pas un unique état initial, il n'est pas déterministe
L'automate n'est pas déterministe, création de l'automate déterministe : 
Automate déterminisé :
Alphabet: ['a', 'b']
États: {'1_3', '0_4', '0', '0_2'}
États initiaux: {'1_3'}
États terminaux: {'0_4', '0_2'}
Transitions:
1_3 --a--> 0_2
1_3 --b--> 0_4
0_2 --a--> 0
0_2 --b--> 0
0_4 --a--> 0
0_4 --b--> 0
0 --a--> 0
0 --b--> 0

Complétion en cours...
Cet automate est déterministe
L'automate est déjà complet
Automate déterminisé et complet :
Alphabet: ['a', 'b']
États: {'1_3', '0_4', '0', '0_2'}
États initiaux: {'1_3'}
États terminaux: {'0_4', '0_2'}
Transitions:
1_3 --a--> 0_2
1_3 --b--> 0_4
0_2 --a--> 0
0_2 --b--> 0
0_4 --a--> 0
0_4 --b--> 0
0 --a--> 0
0 --b--> 0

=== Reconnaissance de mots avec l'automate déterministe et complet ===

Test du mot : 
❌ Le mot '' est rejeté (état final 1_3 non terminal).

Test du mot : a
✅ Le mot 'a' est accepté.

Test du mot : b
✅ Le mot 'b' est accepté.

Test du mot : c
❌ Symbole 'c' non reconnu dans l'alphabet de l'automate.

Test du mot : d
❌ Symbole 'd' non reconnu dans l'alphabet de l'automate.

Test du mot : abbcd
❌ Symbole 'c' non reconnu dans l'alphabet de l'automate.

Test du mot : accccccd
❌ Symbole 'c' non reconnu dans l'alphabet de l'automate.

Test du mot : e
❌ Symbole 'e' non reconnu dans l'alphabet de l'automate.

Test du mot : f
❌ Symbole 'f' non reconnu dans l'alphabet de l'automate.

Test du mot : aaaaa
❌ Le mot 'aaaaa' est rejeté (état final 0 non terminal).

Test du mot : ababa
❌ Le mot 'ababa' est rejeté (état final 0 non terminal).

Test du mot : acbd
❌ Symbole 'c' non reconnu dans l'alphabet de l'automate.

Test du mot : acbbbbbd
❌ Symbole 'c' non reconnu dans l'alphabet de l'automate.

Test du mot : ccbdadb
❌ Symbole 'c' non reconnu dans l'alphabet de l'automate.

Test du mot : abaaa
❌ Le mot 'abaaa' est rejeté (état final 0 non terminal).

Test du mot : abcd
❌ Symbole 'c' non reconnu dans l'alphabet de l'automate.

Test du mot : aaaba
❌ Le mot 'aaaba' est rejeté (état final 0 non terminal).

Test du mot : ba
❌ Le mot 'ba' est rejeté (état final 0 non terminal).

Test du mot : aab
❌ Le mot 'aab' est rejeté (état final 0 non terminal).

Test du mot : aaaaaaaaaaaa
❌ Le mot 'aaaaaaaaaaaa' est rejeté (état final 0 non terminal).

Test du mot : ababababaaab
❌ Le mot 'ababababaaab' est rejeté (état final 0 non terminal).

Test du mot : aba
❌ Le mot 'aba' est rejeté (état final 0 non terminal).

Test du mot : bbbb
❌ Le mot 'bbbb' est rejeté (état final 0 non terminal).

Test du mot : bbaababend
❌ Symbole 'e' non reconnu dans l'alphabet de l'automate.

=== Création de l'automate complémentaire ===
Complémentarisation:
Cet automate est déterministe
L'automate est déjà déterministe
Cet automate est déterministe
création de l'automate complémentaire : 
Alphabet: ['a', 'b']
États: {'1_3', '0_4', '0', '0_2'}
États initiaux: {'1_3'}
États terminaux: {'1_3', '0'}
Transitions:
1_3 --a--> 0_2
1_3 --b--> 0_4
0_2 --a--> 0
0_2 --b--> 0
0_4 --a--> 0
0_4 --b--> 0
0 --a--> 0
0 --b--> 0
