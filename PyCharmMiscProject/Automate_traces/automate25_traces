=== Lecture de l'automate depuis le fichier automate/automate25.txt ===
Alphabet: ['a', 'b', 'c', 'd']
États: [0, 1, 2, 3, 4]
États initiaux: [1]
États terminaux: [0]
Transitions:
1 --a--> {1, 2}
1 --b--> {3}
1 --c--> {4}
1 --d--> {0}
2 --b--> {2, 3}
2 --c--> {4}
2 --d--> {0}
3 --c--> {3, 4}
3 --d--> {0}
4 --d--> {0, 4}

=== Vérification des propriétés de l'automate ===
Cet automate a des états qui transitent vers plus d'un état avec le même symbole.
Déterministe : False
Il y'a des transitions qui mènent à l'état initial de cet automate, il n'est pas standard
Standard : False
L'automate est incomplet car les états suivants sont sans transitions : [(0, 'a'), (0, 'b'), (0, 'c'), (0, 'd'), (2, 'a'), (3, 'a'), (3, 'b'), (4, 'a'), (4, 'b'), (4, 'c')]
Complet : False

=== Standardisation de l'automate ===
Il y'a des transitions qui mènent à l'état initial de cet automate, il n'est pas standard
Il y'a des transitions qui mènent à l'état initial de cet automate, il n'est pas standard
Création de l'automate standard : 
Alphabet: ['a', 'b', 'c', 'd']
États: [0, 1, 2, 3, 4, 5]
États initiaux: [5]
États terminaux: [0]
Transitions:
1 --a--> {1, 2}
1 --b--> {3}
1 --c--> {4}
1 --d--> {0}
2 --b--> {2, 3}
2 --c--> {4}
2 --d--> {0}
3 --c--> {3, 4}
3 --d--> {0}
4 --d--> {0, 4}
5 --a--> {1, 2}
5 --b--> {3}
5 --c--> {4}
5 --d--> {0}

=== Déterminisation et complétion de l'automate ===

Début de la déterminisation et de la complétion...
L'automate ne contient pas de transitions epsilon. Utilisation de determiniser_automate.
Cet automate a des états qui transitent vers plus d'un état avec le même symbole.
L'automate n'est pas déterministe, création de l'automate déterministe : 
Automate déterminisé :
Alphabet: ['a', 'b', 'c', 'd']
États: {'2_3', '0_4', '3_4', '4', '1_2', '0', '1', '3'}
États initiaux: {'1'}
États terminaux: {'0_4', '0'}
Transitions:
1 --a--> 1_2
1 --b--> 3
1 --c--> 4
1 --d--> 0
1_2 --a--> 1_2
1_2 --b--> 2_3
1_2 --c--> 4
1_2 --d--> 0
3 --c--> 3_4
3 --d--> 0
4 --d--> 0_4
2_3 --b--> 2_3
2_3 --c--> 3_4
2_3 --d--> 0
3_4 --c--> 3_4
3_4 --d--> 0_4
0_4 --d--> 0_4

Complétion en cours...
Cet automate est déterministe
L'automate est incomplet car les états suivants sont sans transitions : [('2_3', 'a'), ('0_4', 'a'), ('0_4', 'b'), ('0_4', 'c'), ('3_4', 'a'), ('3_4', 'b'), ('4', 'a'), ('4', 'b'), ('4', 'c'), ('0', 'a'), ('0', 'b'), ('0', 'c'), ('0', 'd'), ('3', 'a'), ('3', 'b')]
Début de la complétion...
➕ Transition ajoutée : 2_3 --(a)--> 35
➕ Transition ajoutée : 0_4 --(a)--> 35
➕ Transition ajoutée : 0_4 --(b)--> 35
➕ Transition ajoutée : 0_4 --(c)--> 35
➕ Transition ajoutée : 3_4 --(a)--> 35
➕ Transition ajoutée : 3_4 --(b)--> 35
➕ Transition ajoutée : 4 --(a)--> 35
➕ Transition ajoutée : 4 --(b)--> 35
➕ Transition ajoutée : 4 --(c)--> 35
➕ Transition ajoutée : 0 --(a)--> 35
➕ Transition ajoutée : 0 --(b)--> 35
➕ Transition ajoutée : 0 --(c)--> 35
➕ Transition ajoutée : 0 --(d)--> 35
➕ Transition ajoutée : 3 --(a)--> 35
➕ Transition ajoutée : 3 --(b)--> 35
Automate déterminisé et complet :
Alphabet: ['a', 'b', 'c', 'd']
États: {'2_3', '0_4', '3_4', '4', '1_2', '0', '1', '3'}
États initiaux: {'1'}
États terminaux: {'0_4', '0'}
Transitions:
1 --a--> 1_2
1 --b--> 3
1 --c--> 4
1 --d--> 0
1_2 --a--> 1_2
1_2 --b--> 2_3
1_2 --c--> 4
1_2 --d--> 0
3 --c--> 3_4
3 --d--> 0
4 --d--> 0_4
2_3 --b--> 2_3
2_3 --c--> 3_4
2_3 --d--> 0
3_4 --c--> 3_4
3_4 --d--> 0_4
0_4 --d--> 0_4
2_3 --a--> 35
0_4 --a--> 35
0_4 --b--> 35
0_4 --c--> 35
3_4 --a--> 35
3_4 --b--> 35
4 --a--> 35
4 --b--> 35
4 --c--> 35
0 --a--> 35
0 --b--> 35
0 --c--> 35
0 --d--> 35
3 --a--> 35
3 --b--> 35
35 --a--> 35
35 --b--> 35
35 --c--> 35
35 --d--> 35

=== Reconnaissance de mots avec l'automate déterministe et complet ===

Test du mot : 
❌ Le mot '' est rejeté (état final 1 non terminal).

Test du mot : a
❌ Le mot 'a' est rejeté (état final 1_2 non terminal).

Test du mot : b
❌ Le mot 'b' est rejeté (état final 3 non terminal).

Test du mot : c
❌ Le mot 'c' est rejeté (état final 4 non terminal).

Test du mot : d
✅ Le mot 'd' est accepté.

Test du mot : abbcd
✅ Le mot 'abbcd' est accepté.

Test du mot : accccccd
❌ Le mot 'accccccd' est rejeté (état final 35 non terminal).

Test du mot : e
❌ Symbole 'e' non reconnu dans l'alphabet de l'automate.

Test du mot : f
❌ Symbole 'f' non reconnu dans l'alphabet de l'automate.

Test du mot : aaaaa
❌ Le mot 'aaaaa' est rejeté (état final 1_2 non terminal).

Test du mot : ababa
❌ Le mot 'ababa' est rejeté (état final 35 non terminal).

Test du mot : acbd
❌ Le mot 'acbd' est rejeté (état final 35 non terminal).

Test du mot : acbbbbbd
❌ Le mot 'acbbbbbd' est rejeté (état final 35 non terminal).

Test du mot : ccbdadb
❌ Le mot 'ccbdadb' est rejeté (état final 35 non terminal).

Test du mot : abaaa
❌ Le mot 'abaaa' est rejeté (état final 35 non terminal).

Test du mot : abcd
✅ Le mot 'abcd' est accepté.

Test du mot : aaaba
❌ Le mot 'aaaba' est rejeté (état final 35 non terminal).

Test du mot : ba
❌ Le mot 'ba' est rejeté (état final 35 non terminal).

Test du mot : aab
❌ Le mot 'aab' est rejeté (état final 2_3 non terminal).

Test du mot : aaaaaaaaaaaa
❌ Le mot 'aaaaaaaaaaaa' est rejeté (état final 1_2 non terminal).

Test du mot : ababababaaab
❌ Le mot 'ababababaaab' est rejeté (état final 35 non terminal).

Test du mot : aba
❌ Le mot 'aba' est rejeté (état final 35 non terminal).

Test du mot : bbbb
❌ Le mot 'bbbb' est rejeté (état final 35 non terminal).

Test du mot : bbaababend
❌ Symbole 'e' non reconnu dans l'alphabet de l'automate.

=== Création de l'automate complémentaire ===
Complémentarisation:
Cet automate est déterministe
L'automate est déjà déterministe
Cet automate est déterministe
création de l'automate complémentaire : 
Alphabet: ['a', 'b', 'c', 'd']
États: {'2_3', '0_4', '3_4', '4', '1_2', '0', '1', '3'}
États initiaux: {'1'}
États terminaux: {'2_3', '3_4', '4', '1_2', '1', '3'}
Transitions:
1 --a--> 1_2
1 --b--> 3
1 --c--> 4
1 --d--> 0
1_2 --a--> 1_2
1_2 --b--> 2_3
1_2 --c--> 4
1_2 --d--> 0
3 --c--> 3_4
3 --d--> 0
4 --d--> 0_4
2_3 --b--> 2_3
2_3 --c--> 3_4
2_3 --d--> 0
3_4 --c--> 3_4
3_4 --d--> 0_4
0_4 --d--> 0_4
2_3 --a--> 35
0_4 --a--> 35
0_4 --b--> 35
0_4 --c--> 35
3_4 --a--> 35
3_4 --b--> 35
4 --a--> 35
4 --b--> 35
4 --c--> 35
0 --a--> 35
0 --b--> 35
0 --c--> 35
0 --d--> 35
3 --a--> 35
3 --b--> 35
35 --a--> 35
35 --b--> 35
35 --c--> 35
35 --d--> 35
